ApiGraph {
    _crate_name: "rdiff",
    api_functions: [
        ApiFunction {
            full_name: "rdiff::BlockHashes::empty",
            generics: {},
            inputs: [
                Primitive(
                    Usize,
                ),
            ],
            output: Some(
                Path {
                    path: Path {
                        res: Def(
                            Struct,
                            DefId(0:240 ~ rdiff[de19]::BlockHashes),
                        ),
                        segments: [
                            PathSegment {
                                name: "BlockHashes",
                                args: AngleBracketed {
                                    args: [],
                                    bindings: [],
                                },
                            },
                        ],
                    },
                },
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:87 ~ rdiff[de19]::hashing::{impl#1}::empty),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {},
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:87 ~ rdiff[de19]::hashing::{impl#1}::empty),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "BlockHashes",
                    ),
                    src: Some(
                        Init(
                            InitContext {
                                struct_type: "BlockHashes",
                                simplified_type: "BlockHashes",
                                fields: "",
                                local: _0,
                            },
                        ),
                    ),
                    span: src/hashing.rs:110:40: 110:51 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb1,
                    ],
                },
            },
            func_types: {
                "usize",
                "BlockHashes",
                "std::collections::HashMap<u32, std::vec::Vec<(usize, [u8; 16])>>",
            },
            input_types: [
                "usize",
            ],
            output_type: Some(
                "BlockHashes",
            ),
            need_functions: {},
            next_functions: {
                (
                    0,
                    10,
                ),
            },
            weight: 4,
        },
        ApiFunction {
            full_name: "rdiff::Diff::new",
            generics: {},
            inputs: [],
            output: Some(
                Path {
                    path: Path {
                        res: Def(
                            Struct,
                            DefId(0:262 ~ rdiff[de19]::Diff),
                        ),
                        segments: [
                            PathSegment {
                                name: "Diff",
                                args: AngleBracketed {
                                    args: [],
                                    bindings: [],
                                },
                            },
                        ],
                    },
                },
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:198 ~ rdiff[de19]::{impl#0}::new),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {
                StatementId {
                    fn_id: DefId(0:198 ~ rdiff[de19]::{impl#0}::new),
                    local: _1,
                }: StatementInfo {
                    type_name: (
                        Drop,
                        "std::vec::Vec<Insert>",
                    ),
                    src: Some(
                        Init(
                            InitContext {
                                struct_type: "std::vec::Vec<Insert>",
                                simplified_type: "std::vec::Vec<Insert>",
                                fields: "",
                                local: _1,
                            },
                        ),
                    ),
                    span: src/lib.rs:96:9: 96:10 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb2,
                        bb3,
                    ],
                },
            },
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:198 ~ rdiff[de19]::{impl#0}::new),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "Diff",
                    ),
                    src: Some(
                        Init(
                            InitContext {
                                struct_type: "Diff",
                                simplified_type: "Diff",
                                fields: "",
                                local: _0,
                            },
                        ),
                    ),
                    span: src/lib.rs:92:21: 92:25 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb2,
                    ],
                },
            },
            func_types: {
                "std::vec::Vec<Delete>",
                "std::vec::Vec<Insert>",
                "Diff",
            },
            input_types: [],
            output_type: Some(
                "Diff",
            ),
            need_functions: {},
            next_functions: {
                (
                    0,
                    14,
                ),
                (
                    0,
                    16,
                ),
                (
                    0,
                    2,
                ),
                (
                    0,
                    12,
                ),
                (
                    0,
                    3,
                ),
                (
                    0,
                    5,
                ),
                (
                    0,
                    13,
                ),
                (
                    0,
                    4,
                ),
                (
                    0,
                    15,
                ),
            },
            weight: 3,
        },
        ApiFunction {
            full_name: "rdiff::Diff::inserts",
            generics: {},
            inputs: [
                BorrowedRef {
                    lifetime: None,
                    mutability: Not,
                    type_: Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:262 ~ rdiff[de19]::Diff),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Diff",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                },
            ],
            output: Some(
                Path {
                    path: Path {
                        res: Def(
                            Struct,
                            DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                        ),
                        segments: [
                            PathSegment {
                                name: "Iter",
                                args: AngleBracketed {
                                    args: [
                                        Lifetime(
                                            Lifetime(
                                                "'_",
                                            ),
                                        ),
                                        Type(
                                            Path {
                                                path: Path {
                                                    res: Def(
                                                        Struct,
                                                        DefId(0:250 ~ rdiff[de19]::Insert),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            name: "Insert",
                                                            args: AngleBracketed {
                                                                args: [],
                                                                bindings: [],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ],
                                    bindings: [],
                                },
                            },
                        ],
                    },
                },
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:201 ~ rdiff[de19]::{impl#0}::inserts),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {},
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:201 ~ rdiff[de19]::{impl#0}::inserts),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "std::slice::Iter<Insert>",
                    ),
                    src: Some(
                        ParamSrc(
                            ParamSrcContext {
                                struct_type: "&Diff",
                                simplified_type: "Diff",
                                fields: "",
                                local: _1,
                            },
                        ),
                    ),
                    span: src/lib.rs:134:30: 134:42 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb2,
                    ],
                },
            },
            func_types: {
                "std::slice::Iter<Insert>",
                "Diff",
                "std::vec::Vec<Insert>",
                "[Insert]",
            },
            input_types: [
                "&Diff",
            ],
            output_type: Some(
                "std::slice::Iter<Insert>",
            ),
            need_functions: {
                0: [
                    11,
                    1,
                    1,
                ],
            },
            next_functions: {},
            weight: 4,
        },
        ApiFunction {
            full_name: "rdiff::Diff::deletes",
            generics: {},
            inputs: [
                BorrowedRef {
                    lifetime: None,
                    mutability: Not,
                    type_: Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:262 ~ rdiff[de19]::Diff),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Diff",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                },
            ],
            output: Some(
                Path {
                    path: Path {
                        res: Def(
                            Struct,
                            DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                        ),
                        segments: [
                            PathSegment {
                                name: "Iter",
                                args: AngleBracketed {
                                    args: [
                                        Lifetime(
                                            Lifetime(
                                                "'_",
                                            ),
                                        ),
                                        Type(
                                            Path {
                                                path: Path {
                                                    res: Def(
                                                        Struct,
                                                        DefId(0:256 ~ rdiff[de19]::Delete),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            name: "Delete",
                                                            args: AngleBracketed {
                                                                args: [],
                                                                bindings: [],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ],
                                    bindings: [],
                                },
                            },
                        ],
                    },
                },
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:202 ~ rdiff[de19]::{impl#0}::deletes),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {},
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:202 ~ rdiff[de19]::{impl#0}::deletes),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "std::slice::Iter<Delete>",
                    ),
                    src: Some(
                        ParamSrc(
                            ParamSrcContext {
                                struct_type: "&Diff",
                                simplified_type: "Diff",
                                fields: "",
                                local: _1,
                            },
                        ),
                    ),
                    span: src/lib.rs:139:30: 139:42 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb2,
                    ],
                },
            },
            func_types: {
                "Diff",
                "std::vec::Vec<Delete>",
                "std::slice::Iter<Delete>",
                "[Delete]",
            },
            input_types: [
                "&Diff",
            ],
            output_type: Some(
                "std::slice::Iter<Delete>",
            ),
            need_functions: {
                0: [
                    11,
                    1,
                    1,
                ],
            },
            next_functions: {},
            weight: 4,
        },
        ApiFunction {
            full_name: "rdiff::Diff::is_empty",
            generics: {},
            inputs: [
                BorrowedRef {
                    lifetime: None,
                    mutability: Not,
                    type_: Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:262 ~ rdiff[de19]::Diff),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Diff",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                },
            ],
            output: Some(
                Primitive(
                    Bool,
                ),
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:203 ~ rdiff[de19]::{impl#0}::is_empty),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {},
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:203 ~ rdiff[de19]::{impl#0}::is_empty),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "bool",
                    ),
                    src: Some(
                        ParamSrc(
                            ParamSrcContext {
                                struct_type: "&Diff",
                                simplified_type: "Diff",
                                fields: "",
                                local: _1,
                            },
                        ),
                    ),
                    span: src/lib.rs:144:31: 144:35 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb3,
                    ],
                },
            },
            func_types: {
                "bool",
                "Diff",
                "std::vec::Vec<Delete>",
                "std::vec::Vec<Insert>",
            },
            input_types: [
                "&Diff",
            ],
            output_type: Some(
                "bool",
            ),
            need_functions: {
                0: [
                    11,
                    1,
                    1,
                ],
            },
            next_functions: {},
            weight: 2,
        },
        ApiFunction {
            full_name: "rdiff::Diff::apply_to_string",
            generics: {},
            inputs: [
                BorrowedRef {
                    lifetime: None,
                    mutability: Not,
                    type_: Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:262 ~ rdiff[de19]::Diff),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Diff",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                },
                BorrowedRef {
                    lifetime: None,
                    mutability: Not,
                    type_: Primitive(
                        Str,
                    ),
                },
            ],
            output: Some(
                Path {
                    path: Path {
                        res: Def(
                            Enum,
                            DefId(2:47924 ~ core[ef75]::result::Result),
                        ),
                        segments: [
                            PathSegment {
                                name: "Result",
                                args: AngleBracketed {
                                    args: [
                                        Type(
                                            Path {
                                                path: Path {
                                                    res: Def(
                                                        Struct,
                                                        DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            name: "String",
                                                            args: AngleBracketed {
                                                                args: [],
                                                                bindings: [],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                        Type(
                                            Path {
                                                path: Path {
                                                    res: Def(
                                                        Struct,
                                                        DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            name: "FromUtf8Error",
                                                            args: AngleBracketed {
                                                                args: [],
                                                                bindings: [],
                                                            },
                                                        },
                                                    ],
                                                },
                                            },
                                        ),
                                    ],
                                    bindings: [],
                                },
                            },
                        ],
                    },
                },
            ),
            _trait_full_path: None,
            _unsafe_tag: Normal,
            def_id: DefId(
                DefId(0:204 ~ rdiff[de19]::{impl#0}::apply_to_string),
            ),
            unsafe_info: {},
            rawptr_info: {},
            drop_info: {
                StatementId {
                    fn_id: DefId(0:204 ~ rdiff[de19]::{impl#0}::apply_to_string),
                    local: _47,
                }: StatementInfo {
                    type_name: (
                        Drop,
                        "std::vec::IntoIter<u8>",
                    ),
                    src: Some(
                        LocalSrc(
                            LocalSrcContext {
                                place: "_45",
                                local: _45,
                            },
                        ),
                    ),
                    span: src/lib.rs:184:5: 184:6 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb50,
                        bb52,
                    ],
                },
                StatementId {
                    fn_id: DefId(0:204 ~ rdiff[de19]::{impl#0}::apply_to_string),
                    local: _5,
                }: StatementInfo {
                    type_name: (
                        Drop,
                        "std::vec::Vec<u8>",
                    ),
                    src: Some(
                        Init(
                            InitContext {
                                struct_type: "std::vec::Vec<u8>",
                                simplified_type: "std::vec::Vec<u8>",
                                fields: "",
                                local: _5,
                            },
                        ),
                    ),
                    span: src/lib.rs:184:5: 184:6 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb49,
                        bb55,
                    ],
                },
                StatementId {
                    fn_id: DefId(0:204 ~ rdiff[de19]::{impl#0}::apply_to_string),
                    local: _31,
                }: StatementInfo {
                    type_name: (
                        Drop,
                        "std::vec::Vec<u8>",
                    ),
                    src: Some(
                        LocalSrc(
                            LocalSrcContext {
                                place: "_13",
                                local: _13,
                            },
                        ),
                    ),
                    span: src/lib.rs:162:55: 162:56 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb17,
                        bb53,
                    ],
                },
            },
            mutate_info: {},
            return_info: {
                StatementId {
                    fn_id: DefId(0:204 ~ rdiff[de19]::{impl#0}::apply_to_string),
                    local: _0,
                }: StatementInfo {
                    type_name: (
                        Return,
                        "std::result::Result<std::string::String, std::string::FromUtf8Error>",
                    ),
                    src: None,
                    span: src/lib.rs:153:52: 153:81 (#0),
                    gen_bbs: [],
                    kill_bbs: [
                        bb51,
                    ],
                },
            },
            func_types: {
                "bool",
                "std::ops::Range<usize>",
                "std::slice::Iter<Delete>",
                "std::vec::IntoIter<u8>",
                "str",
                "usize",
                "Delete",
                "Insert",
                "isize",
                "()",
                "(usize, bool)",
                "Diff",
                "std::vec::Vec<u8>",
                "std::str::Bytes",
                "std::slice::Iter<Insert>",
                "std::string::String,",
                "u8",
            },
            input_types: [
                "&Diff",
                "&str",
            ],
            output_type: Some(
                "std::result::Result<std::string::String, std::string::FromUtf8Error>",
            ),
            need_functions: {
                0: [
                    11,
                    1,
                    1,
                ],
            },
            next_functions: {},
            weight: 5,
        },
    ],
    api_functions_visited: [
        true,
        true,
        true,
        true,
        true,
        true,
    ],
    api_dependencies: [
        (
            ApiDependency {
                output_fun: (
                    BareFunction,
                    1,
                ),
                input_fun: (
                    BareFunction,
                    2,
                ),
                input_param_index: 0,
                call_type: _BorrowedRef(
                    _DirectCall,
                ),
                parameters: [],
            },
            false,
        ),
        (
            ApiDependency {
                output_fun: (
                    BareFunction,
                    1,
                ),
                input_fun: (
                    BareFunction,
                    3,
                ),
                input_param_index: 0,
                call_type: _BorrowedRef(
                    _DirectCall,
                ),
                parameters: [],
            },
            false,
        ),
        (
            ApiDependency {
                output_fun: (
                    BareFunction,
                    1,
                ),
                input_fun: (
                    BareFunction,
                    4,
                ),
                input_param_index: 0,
                call_type: _BorrowedRef(
                    _DirectCall,
                ),
                parameters: [],
            },
            false,
        ),
        (
            ApiDependency {
                output_fun: (
                    BareFunction,
                    1,
                ),
                input_fun: (
                    BareFunction,
                    5,
                ),
                input_param_index: 0,
                call_type: _BorrowedRef(
                    _DirectCall,
                ),
                parameters: [],
            },
            false,
        ),
    ],
    api_sequences: [
        ApiSequence {
            functions: [],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            2,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            1,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            1,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            1,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            1,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    0,
                    false,
                ),
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    2,
                    false,
                ),
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        2,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:250 ~ rdiff[de19]::Insert),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Insert",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
                (
                    0,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        3,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(2:11379 ~ core[ef75]::slice::iter::Iter),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Iter",
                                        args: AngleBracketed {
                                            args: [
                                                Lifetime(
                                                    Lifetime(
                                                        "'_",
                                                    ),
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(0:256 ~ rdiff[de19]::Delete),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "Delete",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
                (
                    1,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        4,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Primitive(
                            Bool,
                        ),
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
                (
                    2,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            1,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
    ],
    chosen_sequences: [
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        1,
                    ),
                    params: [],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:262 ~ rdiff[de19]::Diff),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Diff",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
                ApiCall {
                    func: (
                        BareFunction,
                        5,
                    ),
                    params: [
                        (
                            _FunctionReturn,
                            0,
                            _BorrowedRef(
                                _DirectCall,
                            ),
                        ),
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: true,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Enum,
                                    DefId(2:47924 ~ core[ef75]::result::Result),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "Result",
                                        args: AngleBracketed {
                                            args: [
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8479 ~ alloc[b3e0]::string::String),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "String",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                                Type(
                                                    Path {
                                                        path: Path {
                                                            res: Def(
                                                                Struct,
                                                                DefId(5:8490 ~ alloc[b3e0]::string::FromUtf8Error),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    name: "FromUtf8Error",
                                                                    args: AngleBracketed {
                                                                        args: [],
                                                                        bindings: [],
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                ),
                                            ],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                RefStr,
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {
                (
                    3,
                    false,
                ),
            },
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
        ApiSequence {
            functions: [
                ApiCall {
                    func: (
                        BareFunction,
                        0,
                    ),
                    params: [
                        (
                            _FuzzableType,
                            0,
                            _DirectCall,
                        ),
                    ],
                    is_unsafe: false,
                    is_get_raw_ptr: false,
                    is_drop: false,
                    is_mutate: false,
                    output_type: Some(
                        Path {
                            path: Path {
                                res: Def(
                                    Struct,
                                    DefId(0:240 ~ rdiff[de19]::BlockHashes),
                                ),
                                segments: [
                                    PathSegment {
                                        name: "BlockHashes",
                                        args: AngleBracketed {
                                            args: [],
                                            bindings: [],
                                        },
                                    },
                                ],
                            },
                        },
                    ),
                },
            ],
            fuzzable_params: [
                Primitive(
                    Usize,
                ),
            ],
            _using_traits: [],
            _unsafe_tag: false,
            _moved: {},
            _fuzzable_mut_tag: {},
            _function_mut_tag: {},
            _covered_dependencies: {},
            _control_nums: 0,
            _pattern_mark: None,
            generic_map: {},
            type_annotation: {},
        },
    ],
    api_parameters: [
        Preluded(
            PreludedStructure {
                name: "String",
                preluded_type: String,
                implemented_traits: [
                    "core::fmt::Display",
                    "core::fmt::Debug",
                    "core::convert::From",
                    "core::clone::Clone",
                    "core::copy::Copy",
                ],
                use_functions: [],
                implemented_functions: [],
            },
        ),
        Struct(
            ApiStructure {
                name: "rdiff::Delete",
                is_enum: false,
                implemented_traits: [
                    "core::marker::Sync",
                    "core::panic::unwind_safe::UnwindSafe",
                    "core::marker::Unpin",
                    "core::panic::unwind_safe::RefUnwindSafe",
                    "core::marker::Send",
                    "core::convert::TryInto",
                    "core::borrow::BorrowMut",
                    "core::convert::TryFrom",
                    "core::convert::From",
                    "core::borrow::Borrow",
                    "core::any::Any",
                    "core::convert::Into",
                    "core::marker::StructuralPartialEq",
                    "core::cmp::PartialEq",
                    "core::fmt::Debug",
                ],
                is_generic: true,
                return_functions: [],
                use_functions: [],
                clean_ty: Some(
                    Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:256 ~ rdiff[de19]::Delete),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Delete",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                ),
                implemented_functions: [
                    "rdiff::Delete::get_position",
                    "rdiff::Delete::get_length",
                    "rdiff::Delete::compress_to",
                    "rdiff::Delete::expand_from",
                ],
            },
        ),
        Struct(
            ApiStructure {
                name: "rdiff::Insert",
                is_enum: false,
                implemented_traits: [
                    "core::marker::Sync",
                    "core::panic::unwind_safe::UnwindSafe",
                    "core::marker::Unpin",
                    "core::panic::unwind_safe::RefUnwindSafe",
                    "core::marker::Send",
                    "core::convert::TryInto",
                    "core::borrow::BorrowMut",
                    "core::convert::TryFrom",
                    "core::convert::From",
                    "core::borrow::Borrow",
                    "core::any::Any",
                    "core::convert::Into",
                    "core::marker::StructuralPartialEq",
                    "core::cmp::PartialEq",
                    "core::fmt::Debug",
                ],
                is_generic: true,
                return_functions: [],
                use_functions: [],
                clean_ty: Some(
                    Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:250 ~ rdiff[de19]::Insert),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Insert",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                ),
                implemented_functions: [
                    "rdiff::Insert::get_position",
                    "rdiff::Insert::get_data",
                    "rdiff::Insert::compress_to",
                    "rdiff::Insert::expand_from",
                ],
            },
        ),
        Struct(
            ApiStructure {
                name: "rdiff::string_diff::EditDistance",
                is_enum: false,
                implemented_traits: [
                    "core::marker::Sync",
                    "core::panic::unwind_safe::UnwindSafe",
                    "core::marker::Unpin",
                    "core::panic::unwind_safe::RefUnwindSafe",
                    "core::marker::Send",
                    "core::convert::TryInto",
                    "core::borrow::BorrowMut",
                    "core::convert::TryFrom",
                    "core::convert::From",
                    "core::borrow::Borrow",
                    "core::any::Any",
                    "core::convert::Into",
                    "rdiff::string_diff::OperationScore",
                ],
                is_generic: false,
                return_functions: [],
                use_functions: [],
                clean_ty: None,
                implemented_functions: [
                    "rdiff::string_diff::OperationScore::insert_score",
                    "rdiff::string_diff::OperationScore::delete_score",
                    "rdiff::string_diff::OperationScore::substitution_score",
                    "rdiff::string_diff::OperationScore::match_score",
                ],
            },
        ),
        Struct(
            ApiStructure {
                name: "rdiff::BlockHashes",
                is_enum: false,
                implemented_traits: [
                    "core::marker::Sync",
                    "core::panic::unwind_safe::UnwindSafe",
                    "core::marker::Unpin",
                    "core::panic::unwind_safe::RefUnwindSafe",
                    "core::marker::Send",
                    "core::convert::TryInto",
                    "core::borrow::BorrowMut",
                    "core::convert::TryFrom",
                    "core::convert::From",
                    "core::borrow::Borrow",
                    "core::any::Any",
                    "core::convert::Into",
                    "core::fmt::Debug",
                    "core::marker::StructuralPartialEq",
                    "core::cmp::PartialEq",
                ],
                is_generic: true,
                return_functions: [
                    0,
                ],
                use_functions: [],
                clean_ty: Some(
                    Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:240 ~ rdiff[de19]::BlockHashes),
                            ),
                            segments: [
                                PathSegment {
                                    name: "BlockHashes",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                ),
                implemented_functions: [
                    "rdiff::BlockHashes::new",
                    "rdiff::BlockHashes::empty",
                    "rdiff::BlockHashes::diff_and_update",
                    "rdiff::BlockHashes::verify_unchanged",
                    "rdiff::BlockHashes::compress_to",
                    "rdiff::BlockHashes::expand_from",
                ],
            },
        ),
        Struct(
            ApiStructure {
                name: "rdiff::Diff",
                is_enum: false,
                implemented_traits: [
                    "core::marker::Sync",
                    "core::panic::unwind_safe::UnwindSafe",
                    "core::marker::Unpin",
                    "core::panic::unwind_safe::RefUnwindSafe",
                    "core::marker::Send",
                    "core::convert::TryInto",
                    "core::borrow::BorrowMut",
                    "core::convert::TryFrom",
                    "core::convert::From",
                    "core::borrow::Borrow",
                    "core::any::Any",
                    "core::convert::Into",
                    "core::fmt::Debug",
                    "core::marker::StructuralPartialEq",
                    "core::cmp::PartialEq",
                ],
                is_generic: true,
                return_functions: [
                    1,
                ],
                use_functions: [
                    (
                        2,
                        0,
                    ),
                    (
                        3,
                        0,
                    ),
                    (
                        4,
                        0,
                    ),
                    (
                        5,
                        0,
                    ),
                ],
                clean_ty: Some(
                    Path {
                        path: Path {
                            res: Def(
                                Struct,
                                DefId(0:262 ~ rdiff[de19]::Diff),
                            ),
                            segments: [
                                PathSegment {
                                    name: "Diff",
                                    args: AngleBracketed {
                                        args: [],
                                        bindings: [],
                                    },
                                },
                            ],
                        },
                    },
                ),
                implemented_functions: [
                    "rdiff::Diff::new",
                    "rdiff::Diff::inserts",
                    "rdiff::Diff::deletes",
                    "rdiff::Diff::is_empty",
                    "rdiff::Diff::apply_to_string",
                    "rdiff::Diff::apply",
                    "rdiff::Diff::compress_to",
                    "rdiff::Diff::expand_from",
                ],
            },
        ),
    ],
    full_name_map: FullNameMap {
        full_name_map: {
            DefId(0:0 ~ rdiff[de19]): (
                "rdiff",
                Module,
            ),
            DefId(0:256 ~ rdiff[de19]::Delete): (
                "rdiff::Delete",
                Struct,
            ),
            DefId(0:125 ~ rdiff[de19]::string_diff::find_diff): (
                "rdiff::string_diff::find_diff",
                Function,
            ),
            DefId(0:262 ~ rdiff[de19]::Diff): (
                "rdiff::Diff",
                Struct,
            ),
            DefId(0:134 ~ rdiff[de19]::string_diff::OperationScore): (
                "rdiff::string_diff::OperationScore",
                Trait,
            ),
            DefId(0:240 ~ rdiff[de19]::BlockHashes): (
                "rdiff::BlockHashes",
                Struct,
            ),
            DefId(0:114 ~ rdiff[de19]::string_diff): (
                "rdiff::string_diff",
                Module,
            ),
            DefId(0:139 ~ rdiff[de19]::string_diff::EditDistance): (
                "rdiff::string_diff::EditDistance",
                Struct,
            ),
            DefId(0:250 ~ rdiff[de19]::Insert): (
                "rdiff::Insert",
                Struct,
            ),
        },
    },
    mod_visibility: ModVisibity {
        crate_name: "rdiff",
        inner: {
            "rdiff::window": Restricted(
                DefId(0:0 ~ rdiff[de19]),
            ),
            "rdiff::string_diff": Public,
            "rdiff::hashing": Restricted(
                DefId(0:0 ~ rdiff[de19]),
            ),
            "rdiff": Public,
        },
    },
    generic_functions: {},
    functions_with_unsupported_fuzzable_types: {
        "rdiff::Delete::expand_from",
        "rdiff::BlockHashes::expand_from",
        "rdiff::Diff::compress_to",
        "rdiff::Diff::expand_from",
        "rdiff::BlockHashes::compress_to",
        "rdiff::Insert::expand_from",
        "rdiff::Delete::compress_to",
        "rdiff::Insert::compress_to",
        "rdiff::BlockHashes::verify_unchanged",
        "rdiff::string_diff::find_diff",
    },
    generable_types: {
        BorrowedRef {
            lifetime: None,
            mutability: Not,
            type_: Path {
                path: Path {
                    res: Def(
                        Struct,
                        DefId(0:262 ~ rdiff[de19]::Diff),
                    ),
                    segments: [
                        PathSegment {
                            name: "Diff",
                            args: AngleBracketed {
                                args: [],
                                bindings: [],
                            },
                        },
                    ],
                },
            },
        }: {
            (
                1,
                _BorrowedRef(
                    _DirectCall,
                ),
            ),
            (
                11,
                _BorrowedRef(
                    _DirectCall,
                ),
            ),
        },
        BorrowedRef {
            lifetime: None,
            mutability: Mut,
            type_: Path {
                path: Path {
                    res: Def(
                        Struct,
                        DefId(0:240 ~ rdiff[de19]::BlockHashes),
                    ),
                    segments: [
                        PathSegment {
                            name: "BlockHashes",
                            args: AngleBracketed {
                                args: [],
                                bindings: [],
                            },
                        },
                    ],
                },
            },
        }: {
            (
                9,
                _MutBorrowedRef(
                    _DirectCall,
                ),
            ),
        },
    },
    record_sequences: [],
    copy_structs: [],
    stop_list: [],
    api_generation_map: {},
    refuse_api_map: {},
    type_generation_map: {},
    total_weight: 22,
}